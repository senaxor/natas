exit
res.body
exit
res.get_fields('Set-Cookie')
cookie
cookies
res.body
c
res = Net::HTTP.start(uri.hostname, uri.port, use_ssl: uri.scheme == "https",:read_timeout =>3) do |http
request['Cookie'] = cookies
cookies = ["PHPSESSID=119"]
cookies = ["PHPSESSID=119;"]
cookies = ["PHPSESSID=119; path=/; HttpOnly"]
request['Cookie'] = cookies
cookies.count
cookies.class
cookies
cookies.join('; ')
cookies=res.get_fields('Set-Cookie')
c.join('; ')
c=res.get_fields('Set-Cookie')
res.get_fields('Set-Cookie')
exit
res['set-cookie'].to_s
res['set-cookie'].to_s.split(";")
res['set-cookie'].to_S.split(";")
res['set-cookie'].split(";")
res['set-cookie']
res['set-cookie'].split('; ')
res['Set-Cookie']   
res.body
request['Cookie'] 
request
exit
cookie
c
res.body
c
exit
c
CGI::Cookie.new("PHPSESSID","119")
CGI::Cookie.new("PHPSESSID",119)
cookie
exit
c
cookie
exit
c
res.body
exit
c
res.body
exit
res
res['set-cookie']
exit
res['set-cookie'] 
res['set-cookie'] = "PHPSESSID=119; path=/; HttpOnly"
res['set-cookie'] 
res.to_hash['set-cookie'] 
res.get_fields('set-cookie') 
res['Set-Cookie']   
res.body
exit
c
cookie['PHPSESSID']
cookie
request['Cookie']
request.class
request
res.body
res.body.include?('regular user')
exit
c
res.body.include?('regular user')
c
res.body.include?('regular user')
res.body
exit
c
res.body.include?('regular user')
res.body
c
res.read_body
res.body
res.read_body
res.body
res
c
response
res.read_body
res.read_body.split("\")
res.read_body.class
res.read_body
res.class
res.readbody
res
res=http.request(request)
request
http.path
http.url
http.uri
http.port
http
c
response
response.body
c
response
response.body
http.response
http.text
c
res.status
res.text
res=http.request(request)
http.request(request)
c
request.response
request.text
request
